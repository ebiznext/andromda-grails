##
##  author: stephane.manciot@ebiznext.com
##        
#set($indent ="    ")
#set($generatedFile = "${entity.packagePath}/${entity.entityName}Validation.groovy")
// license-header java merge-point
//
// Generated by: GrailsEntityValidation.vsl in andromda-grails-cartridge.
//
#if ($stringUtils.isNotBlank($entity.packageName))
package $entity.packageName
#end
/**
 *
 */
#set ($validationBase = "ValidationBase")
#if($stringUtils.isNotEmpty($customTypesPackage))
#set ($validationBase = "${customTypesPackage}.ValidationBase")
#end
class ${entity.entityName}Validation
#set($entityName = "")
#if ($stringUtils.isNotBlank($entity.packageName))
#set($entityName = "${entity.packageName}.${entity.entityName}")
#else
#set($entityName = "${entity.entityName}")
#end
${indent}extends ${validationBase}<${entityName}>
{

## events
${indent}def beforeInsert(${entityName} entity) {
${indent}${indent}super.beforeInsert(entity)
${indent}}

${indent}def beforeUpdate(${entityName} entity) {
${indent}${indent}super.beforeUpdate(entity)
${indent}}

${indent}def beforeDelete(${entityName} entity) {
${indent}${indent}super.beforeDelete(entity)
${indent}}

${indent}def afterInsert(${entityName} entity) {
${indent}${indent}super.afterInsert(entity)
${indent}}

${indent}def afterUpdate(${entityName} entity) {
${indent}${indent}super.afterUpdate(entity)
${indent}}

${indent}def afterDelete(${entityName} entity) {
${indent}${indent}super.afterDelete(entity)
${indent}}

${indent}def onLoad(${entityName} entity) {
${indent}${indent}super.onLoad(entity)
${indent}}

## entity custom static validators
#foreach ($attribute in $entity.attributes)
#if($grailsUtils.hasCustomValidator($attribute))
#set($customValidatorName = "$grailsUtils.getCustomValidatorName($entity, $attribute)")
#set($customValidatorClosure = "$grailsUtils.getDefaultCustomValidatorClosure($entity, $attribute)")
${indent}def static ${customValidatorName} = ${customValidatorClosure}
#end
#end
#foreach ($sourceEnd in $entity.associationEnds)
#set ($otherEnd = $sourceEnd.otherEnd)
#if($grailsUtils.hasCustomValidator($otherEnd))
#if ($otherEnd.navigable && !$otherEnd.transient)
#if ($sourceEnd.one2One || $sourceEnd.many2One)
#if (!$otherEnd.aggregation && !$otherEnd.composition)
#set($customValidatorName = "$grailsUtils.getCustomValidatorName($entity, $otherEnd)")
#set($customValidatorClosure = "$grailsUtils.getDefaultCustomValidatorClosure($entity, $otherEnd)")
${indent}def static ${customValidatorName} = ${customValidatorClosure}
#end
#end
#end
#end
#end

}

##
##  author: stephane.manciot@ebiznext.com
##          
#set($indent ="    ")
//
//     Attention: Generated code! Do not modify by hand!
//     Generated by: DataSource.vsl in andromda-grails-cartridge.
dataSource {
#if ($stringUtils.isNotBlank($hibernateDialect))
${indent}dialect = "$hibernateDialect"
#end
#if ($stringUtils.isNotBlank($hibernateShowSql))
${indent}logSql = "$hibernateShowSql"
#end
}
hibernate {
#if ($stringUtils.isNotBlank($hibernatePoolSize))
${indent}pool.size = "$hibernatePoolSize"
#end
#if ($stringUtils.isNotBlank($hibernateTransactionManagerStrategy))
${indent}transaction.manager.strategy = "$hibernateTransactionManagerStrategy"
#end
#if ($stringUtils.isNotBlank($hibernateUserTransactionName))
// ${indent}jta.UserTransaction = "$hibernateUserTransactionName"
#end
#if ($stringUtils.isNotBlank($hibernateTransactionManagerLookup))
${indent}transaction.manager_lookup_class = "$hibernateTransactionManagerLookup"
#end
#if ($stringUtils.isNotBlank($hibernateUseOuterJoin))
${indent}use_outer_join = "$hibernateUseOuterJoin"
#end
#if ($stringUtils.isNotBlank($hibernateJndiName))
${indent}session_factory_name = "$hibernateJndiName"
#end
#if ($stringUtils.isNotBlank($hibernateDefaultSchema))
${indent}default_schema = "$hibernateDefaultSchema"
#end
#if ($stringUtils.isNotBlank($hibernateMaxFetchDepth))
${indent}max_fetch_depth = "$hibernateMaxFetchDepth"
#end
#if ($stringUtils.isNotBlank($hibernateJdbcFetchSize))
${indent}jdbc.fetch_size = "$hibernateJdbcFetchSize"
#end
#if ($stringUtils.isNotBlank($hibernateJdbcBatchSize))
${indent}jdbc.batch_size = "$hibernateJdbcBatchSize"
#end
#if ($stringUtils.isNotBlank($hibernateJdbcUseScrollableResultSet))
${indent}jdbc.use_scrollable_resultset = "$hibernateJdbcUseScrollableResultSet"
#end
#if ($stringUtils.isNotBlank($hibernateJdbcUseStreamsForBinary))
${indent}use_streams_for_binary = "$hibernateJdbcUseStreamsForBinary"
#end
#if ($stringUtils.isNotBlank($hibernateQuerySubstitutions))
${indent}query.substitutions = '$!{hibernateQuerySubstitutions}'
## FIX issue 16540 mourad.dachraoui@ebiznext.com
#end
#if ($stringUtils.isNotBlank($hibernateEnableCache))
#if($hibernateEnableCache.equalsIgnoreCase("true"))
${indent}cache.use_second_level_cache = $hibernateEnableCache
#if ($stringUtils.isNotBlank($hibernateCacheProvider))
${indent}cache.provider_class = '$!{hibernateCacheProvider}'
#end
${indent}cache.use_query_cache = $hibernateEnableCache
#if ($stringUtils.isNotBlank($hibernateQueryCacheFactory))
${indent}cache.query_cache_factory = '$!{hibernateQueryCacheFactory}'
#end
#end
#end
#if ($stringUtils.isNotBlank($hibernateConnectionReleaseMode))
${indent}connection.release_mode = "$hibernateConnectionReleaseMode"
#end
// database hibernateProperties merge-point
}
// environment specific settings
environments {
${indent}development {
${indent}${indent}dataSource {
${indent}${indent}${indent}dbCreate = "create-drop"
${indent}${indent}${indent}pooled = true
#if ($stringUtils.isNotBlank($driver))
${indent}${indent}${indent}driverClassName = "$driver"
#end
#if ($stringUtils.isNotBlank($connectionUrl))
${indent}${indent}${indent}url = "$connectionUrl"
#end
#if ($stringUtils.isNotBlank($username))
${indent}${indent}${indent}username = "$username"
#end
#if ($stringUtils.isNotBlank($password))
${indent}${indent}${indent}password = "$password"
#end
${indent}${indent}// datasource development-environment merge-point
${indent}${indent}}
${indent}}
${indent}test {
${indent}${indent}dataSource {
${indent}${indent}${indent}dbCreate = "update"
${indent}${indent}// datasource test-environment merge-point
${indent}${indent}}
${indent}}
${indent}production {
${indent}${indent}dataSource {
${indent}${indent}${indent}dbCreate = "update"
#if ($stringUtils.isNotBlank($dataSource))
${indent}${indent}${indent}jndiName = "$dataSource"
#end
${indent}${indent}// datasource production-environment merge-point
${indent}${indent}}
${indent}}
${indent}// datasource environments merge-point
}
<?xml version="1.0" encoding="ISO-8859-1" ?>

<profile>
    <documentation>
        <p>
            Most of the model elements will require a stereotype to be processed correctly, below you will find
            a table indicating on which model element you may put what stereotype, it will also
            denote which effect this has on the generation process.
        </p>
        <p>
            Sometimes it happens you want to add information to the model but there is no clean way of doing it.
            In those cases you may want to resort to tagged values, but these cases should be considered with
            caution. A tagged value is something extra, something optional, and the application should
            run fine without them.
        </p>
        <p>
            Bpm4struts allows you to add tagged values here and there but provides a default value
            in case they are missing.
        </p>
    </documentation>
    <elements>
        <elementGroup name="Stereotypes">
            <element name="ENTITY">
                <documentation>
                    Denotes a class is representing an Hibernate POJO. This will instruct the cartridge to generate
                    a <code>.groovy</code> class.
                </documentation>
                <value>Entity</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="ENUMERATION">
                <documentation>
                    This class will instruct the generation of a type-safe enumeration class. The class implements the
                    required Hibernate interface to be able to be persisted. That way it is possible for Entities to
                    use this enumeration type for their attributes.
                </documentation>
                <value>Enumeration</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="CONSTRAINT">
                <documentation>
                    Denotes a GORM constraint.
                </documentation>
                <value>Constraint</value>
                <appliedOnElement>entity's attribute</appliedOnElement>
            </element>
            <element name="CUSTOM_VALIDATOR">
                <documentation>
                    Denotes a GORM custom validator.
                </documentation>
                <value>CustomValidator</value>
                <appliedOnElement>entity's attribute</appliedOnElement>
            </element>
            <element name="WEB_SERVICE">
                <documentation>
                    Creates a WSDD service fragment and exposes ALL methods of the element
                    as a web service.
                </documentation>
                <value>WebService</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="WEB_SERVICE_OPERATION">
                <documentation>
                    This is used in conjunction with the <![CDATA[<<Service>>]]> stereotype.
                    Adds the method to the list of allowed methods
                    which will be exposed as a web service.  You <strong>MUST</strong>
                    place this stereotype on an operation if you want it exposed
                    as a web service (unless you add the <![CDATA[<<WebService>>]]> stereotype to your class).
                </documentation>
                <value>WebServiceOperation</value>
                <appliedOnElement>Service operation</appliedOnElement>
            </element>
        </elementGroup>
        <elementGroup name="Tagged Values for gorm constraints">
            <documentation>
                The following are tagged values exclusively used for gorm constraints.
            </documentation>
            <element name="GORM_CONSTRAINT_TYPE">
                <documentation>
                    Defines a GORM constraint type.
                </documentation>
                <value>@andromda.gorm.constraint.type</value>
                <appliedOnElement>entity's attribute</appliedOnElement>
                <allowedValues>
                    <value>creditCard</value>
                    <value>email</value>
                    <value>url</value>
                    <value>regularExpression</value>
                    <value>range</value>
                </allowedValues>
            </element>
            <element name="GORM_CONSTRAINT_MATCHES">
                <documentation>
                    Defines a GORM regular expression constraint.
                </documentation>
                <value>@andromda.gorm.constraint.matches</value>
                <appliedOnElement>entity's attribute</appliedOnElement>
            </element>
            <element name="GORM_CONSTRAINT_RANGE">
                <documentation>
                    Defines a GORM range constraint.
                </documentation>
                <value>@andromda.gorm.constraint.range</value>
                <appliedOnElement>entity's attribute</appliedOnElement>
            </element>
        </elementGroup>
        <elementGroup name="Constants">
            <documentation>
                Values of contants used in the Grails namespace.
            </documentation>
            <element name="CREDIT_CARD">
                <documentation></documentation>
                <value>creditCard</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="EMAIL">
                <documentation></documentation>
                <value>email</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="URL">
                <documentation></documentation>
                <value>url</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="REGULAR_EXPRESSION">
                <documentation></documentation>
                <value>regularExpression</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="RANGE">
                <documentation></documentation>
                <value>range</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
        </elementGroup>
        <elementGroup name="Tagged Values">
            <documentation>
                grails allows you to add tagged values here and there but provides a
                default value in case they are missing.
            </documentation>
            <element name="HIBERNATE_QUERY">
                <documentation>
                    Defines a hibernate query expression. Note that it's encouraged
                    to model your query body as an OCL constraint (instead of using
                    this tagged value).
                </documentation>
                <value>@andromda.hibernate.query</value>
                <appliedOnElement>An Entity operation marked as a
                    <code>query</code>.
                </appliedOnElement>
            </element>
            <element name="HIBERNATE_USE_NAMED_PARAMETERS">
                <documentation>
                    Defines whether the marked finder will use named parameters or not.
                </documentation>
                <value>@andromda.hibernate.query.useNamedParameters</value>
                <appliedOnElement>An Entity operation marked as a
                    <code>query</code>.
                </appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <!-- 
            <element name="EJB_VIEWTYPE">
                <documentation>
                    Defines the view type for a Session EJB. If undefined,
                    the default defined by the
                    <a href="namespace.html#ejbViewType">ejbViewType</a>
                    namespace property will be assumed.
                </documentation>
                <value>@andromda.ejb.viewType</value>
                <appliedOnElement><![CDATA[<<Service>>]]></appliedOnElement>
                <allowedValues>
                    <value>local</value>
                    <value>remote</value>
                    <value>both</value>
                </allowedValues>
            </element>
             -->
            <element name="EJB_TRANSACTION_TYPE">
                <documentation>
                    Defines a transaction type for the method.
                </documentation>
                <value>@andromda.ejb.transaction.type</value>
                <appliedOnElement>Service Operation</appliedOnElement>
                <allowedValues>
                    <value>NotSupported</value>
                    <value>Supports</value>
                    <value>Required</value>
                    <value>RequiresNew</value>
                    <value>Mandatory</value>
                    <value>Never</value>
                </allowedValues>
            </element>
            <element name="TRANSACTION_TYPE">
                <documentation>
                    Defines a Spring transaction type for the service operation
                    (when <strong>NOT</strong> wrapped by EJBs). Using this tagged value on a service
                    will enable it on all of its operations. If this tagged value is present on such a
                    service operation it will take priority over any transaction declaration in a
                    broader scope such as its service or the global namespace.
                </documentation>
                <value>@andromda.spring.transaction.type</value>
                <appliedOnElement>Service or Service Operation</appliedOnElement>
                <allowedValues>
                    <value>PROPAGATION_NEVER</value>
                    <value>PROPAGATION_NESTED</value>
                    <value>PROPAGATION_MANDATORY</value>
                    <value>PROPAGATION_REQUIRED</value>
                    <value>PROPAGATION_REQUIRES_NEW</value>
                    <value>PROPAGATION_SUPPORTS</value>
                    <value>PROPAGATION_NOT_SUPPORTED</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_LAZY">
                <documentation>
                    Used to denote how entities, relationships or attributes must be loaded:
                    <code>true</code>for
                    <code>lazy</code>,
                    <code>false</code>for
                    <code>eager</code>. Defaults to
                    <code>false</code>for composite
                    associations (unless
                    <a href="namespace.html#compositionDefinesEagerLoading">compositionDefinesEagerLoading</a>is
                    set to
                    <code>false</code>) and defaults to
                    <code>true</code>for the other kinds.
                    For entities, defaults to <code>false</code> for Hibernate 2 and
                    <code>true</code> for Hibernate 3 and NHibernate.
                </documentation>
                <value>@andromda.hibernate.lazy</value>
                <appliedOnElement>
                    <a href="#Entity"><![CDATA[<<Entity>>]]></a>classes, association ends between
                    <a href="#Entity"><![CDATA[<<Entity>>]]></a>classes, or attributes of an
                    <a href="#Entity"><![CDATA[<<Entity>>]]></a>
                </appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_INHERITANCE">
                <documentation>
                    Used to override the default hibernate inheritance
                    strategy defined by the
                    <a href="namespace.html#hibernateInheritanceStrategy">hibernateInheritanceStrategy</a>
                    namespace property.
                    <ul>
                        Permitted values are:
                        <li>class - table per hierarchy.</li>
                        <li>subclass - table per class in hierarchy.</li>
                        <li>concrete - Table per class.</li>
                        <li>union-subclass - Table per class (only on Hibernate 3).</li>
                        <li>
                            interface - Root class is defined as
                            an interface and the attributes remapped to the subclasses.
                            This is useful in the concrete case because it has limitations
                            in the associations.
                        </li>
                    </ul>
                    <p>
                        The tagged value of @andromda.hibernate.inheritance
                        is set on the base/root class.
                        All subclasses must then follow the same strategy unless
                        interface or concrete is the predecessor strategy.
                        The default strategy is defined by the
                        <a href="namespaces.html#hibernateInheritanceStrategy">hibernateInheritanceStrategy</a>
                        namespace property.
                    </p>
                </documentation>
                <value>@andromda.hibernate.inheritance</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>class</value>
                    <value>subclass</value>
                    <value>concrete</value>
                    <value>union-subclass</value>
                    <value>interface</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_OUTER_JOIN">
                <documentation>
                    Defines if Hibernate will use a outer join for fetching the given assocation end.
                    For Hibernate3 this will result in a fetch clause with values:
                    <ul>
                        <li>join</li>
                        <li>select</li>
                    </ul>
                </documentation>
                <value>@andromda.hibernate.outerjoin</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>auto</value>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ENTITY_DYNAMIC_INSERT">
                <documentation>
                    Defines if the entity will limit the SQL insert statement to properties with values. This value
                    overrides the
                    <a href="namespace.html#hibernateEntityDynamicInsert">namespace property</a>for this entity.
                </documentation>
                <value>@andromda.hibernate.entity.dynamicInsert</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ENTITY_DYNAMIC_UPDATE">
                <documentation>
                    Defines if the entity will limit the SQL update statements to properties that are modified. This
                    value overrides the
                    <a href="namespace.html#hibernateEntityDynamicUpdate">namespace property</a>for this entity.
                </documentation>
                <value>@andromda.hibernate.entity.dynamicUpdate</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_GENERATOR_CLASS">
                <documentation>
                    Used to define the generator class used for the hibernate entity.
                    Any of the hibernate generator classes may be used.
                </documentation>
                <value>@andromda.hibernate.generator.class</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>increment</value>
                    <value>identity</value>
                    <value>sequence</value>
                    <value>hilo</value>
                    <value>seqhilo</value>
                    <value>guid</value>
                    <value>uuid</value>
                    <value>uuid.hex</value>
                    <value>uuid.string</value>
                    <value>native</value>
                    <value>assigned</value>
                    <value>select</value>
                    <value>foreign</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_PROXY">
                <documentation>
                    Defines if a proxy will be enabled for the entity. Overrrides the "hibernateProxy" namespace
                    property.
                </documentation>
                <value>@andromda.hibernate.entity.proxy</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_COLLECTION_TYPE">
                <documentation>
                    Used to define the mapping for hibernate collections.
                    This value overrides the
                    <a href="namespace.html#hibernateAssociationCollectionType">namespace property</a>.
                </documentation>
                <value>@andromda.hibernate.collection.type</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>set</value>
                    <value>map</value>
                    <value>bag</value>
                    <value>list</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_SORT_TYPE">
                <documentation>
                    Used to define how elements will be sorted within the collection defined by the association. (Only
                    available for maps and sets)
                    This value overrides the
                    <a href="namespace.html#hibernateAssociationSortType">namespace property</a>.
                </documentation>
                <value>@andromda.hibernate.sort.type</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>unsorted</value>
                    <value>natural</value>
                    <value>comparatorClass</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_ORDER_BY_COLUMNS">
                <documentation>
                    Column names that will be used for sorting the collection, with asc or desc optionally.
                </documentation>
                <value>@andromda.hibernate.orderByColumns</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>Properties of this entity</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_WHERE_CLAUSE">
                <documentation>
                    SQL condition to define a subset of available data for the collection
                </documentation>
                <value>@andromda.hibernate.whereClause</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>An SQL code fragment</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_INDEX">
                <documentation>
                    Column containing the collection index, overrides the
                    <a href="namespace.html#associationEndCollectionIndexName">associationEndCollectionIndexName</a>
                </documentation>
                <value>@andromda.hibernate.collection.index</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>A property of this entity</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_INDEX_TYPE">
                <documentation>
                    The type of the column containing the collection index, overrides the
                    <a href="namespace.html#associationEndCollectionIndexType">associationEndCollectionIndexType</a>
                </documentation>
                <value>@andromda.hibernate.collection.index.type</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>A property of this entity</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_VERSION_PROPERTY">
                <documentation>
                    Specifies wheter or not the entity will have a version property. If a value is present, then the
                    entity will have
                    a version property with the name specified within the tagged value.
                </documentation>
                <value>@andromda.hibernate.version</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>The name of the version property</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_CASCADE">
                <documentation>
                    Place an individual cascade value at an association end, overriding the properties
                    <a href="namespace.html#hibernateDefaultCascade">hibernateDefaultCascade</a>,
                    <a href="namespace.html#hibernateCompositionCascade">hibernateCompositionCascade</a>and
                    <a href="namespace.html#hibernateAggregationCascade">hibernateAggregationCascade</a>.
                </documentation>
                <value>@andromda.hibernate.cascade</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
            </element>
            <element name="HIBERNATE_FORMULA">
                <documentation>
                    Defines an attribute of a class as a calculated value. This tagged value
                    stores the SQL formula that will be used to assign a value to this property.
                </documentation>
                <value>@andromda.hibernate.formula</value>
                <appliedOnElement>The attribute of an <![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>An SQL code fragment</value>
                </allowedValues>
            </element>
            <element name="ENTITY_DISCRIMINATOR_COLUMN">
                <documentation>
                    Used at the class level of an entity and is
                    optional. This value indicates the name of the
                    column to be used for the discriminator. If not
                    specified for the SINGLE_TABLE or JOINED inheritance
                    mapping strategies, then default to <b>TYPE</b>.
                </documentation>
                <value>@andromda.persistence.discriminator.column.name</value>
                <appliedOnElement>The <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>column name</value>
                </allowedValues>
            </element>
            <element name="ENTITY_DISCRIMINATOR_TYPE">
                <documentation>
                    Used to override the default entity inheritance
                    discriminator type defined by the
                    <a href="namespace.html#entityDiscriminatorType">
                        entityDiscriminatorType
                    </a>
                    namespace property.
                    <ul>
                        Permitted values are:
                        <li>STRING</li>
                        <li>CHAR</li>
                        <li>INTEGER</li>
                    </ul>
                    <p>
                        The tagged value of
                        @andromda.persistence.discriminator.type is set
                        once on the base/root class to indicate the type
                        of the column used for the discriminator. The
                        default discriminator type is defined by the
                        <a
                            href="namespaces.html#entityDiscriminatorType">
                            entityDiscriminatorType
                        </a>
                        namespace property.
                    </p>
                </documentation>
                <value>@andromda.persistence.discriminator.type</value>
                <appliedOnElement>The <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>STRING</value>
                    <value>CHAR</value>
                    <value>INTEGER</value>
                </allowedValues>
            </element>
            <element name="ENTITY_DISCRIMINATOR_VALUE">
                <documentation>
                    Used at the class level of an entity and is
                    optional. This is the value that indicates that the
                    row is an entity of the annotated entity type. It
                    should be specified for each class in the hierarchy.
                </documentation>
                <value>@andromda.persistence.discriminator.value</value>
                <appliedOnElement>The <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>A String</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_PROPERTY_INSERT">
                <documentation>
                    Specifies whether a mapped column should be included in SQL INSERT
                    statements. Setting to <code>false</code> allows the column to be
                    initialized using other mechanisms such as a value defaulted by the
                    database. Defaults to <code>true</code>.
                </documentation>
                <value>@andromda.hibernate.property.insert</value>
                <appliedOnElement>the attribute of an <![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_PROPERTY_UPDATE">
                <documentation>
                    Specifies whether a mapped column should be included in SQL UPDATE
                    statements. Setting to <code>false</code> allows the column to be
                    updated using other mechanisms such as a value defaulted by the
                    database. Defaults to <code>true</code>.
                </documentation>
                <value>@andromda.hibernate.property.update</value>
                <appliedOnElement>the attribute of an <![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_XML_TAG_NAME">
                <documentation>
                    Defines the name of the XML element that is generated when
                    an entity, attribute, or associated entity is represented in XML format.
                    Valid only when XML persistence has been enabled. Controls the <i>node</i>
                    attribute in the Hibernate mapping file.
                    See also <a href="namespace.html#hibernateXMLPersistence">hibernateXMLPersistence</a>
                </documentation>
                <value>@andromda.hibernate.xml.tagName</value>
                <appliedOnElement>the attribute of an <![CDATA[<<Entity>>]]>, or an the <![CDATA[<<Entity>>]]> itself,
                                  or on an association end between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>Any valid XML tag name</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_XML_EMBED">
                <documentation>
                    Specifies wheter or not the entity attached to the association end should be
                    embedded as a complete XML structure, or simply as a referenc to its ID.
                    Controls the <i>embed-xml</i> attribute in the Hibernate mapping file.
                    See also <a href="namespace.html#hibernateXMLPersistence">hibernateXMLPersistence</a>
                </documentation>
                <value>@andromda.hibernate.xml.embed</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
        </elementGroup>
        <elementGroup name="Tagged Values for caching">
            <documentation>
                The following are tagged values exclusively used for tuning the persistence cache.
            </documentation>
            <element name="HIBERNATE_USE_QUERY_CACHE">
                <documentation>
                    Defines is caching is enabled for this query
                </documentation>
                <value>@andromda.hibernate.query.useCache</value>
                <appliedOnElement>A query operation</appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ENTITY_CACHE">
                <documentation>
                    Defines the cache strategy for the Entity.
                </documentation>
                <value>@andromda.hibernate.entity.cache</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>read-write</value>
                    <value>nonstrict-read-write</value>
                    <value>read-only</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ENTITYCACHE_DISTRIBUTED">
                <documentation>
                    Defines whether the cache for this entity is to be distributed.
                </documentation>
                <value>@andromda.hibernate.entity.cache.distributed</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATION_CACHE">
                <documentation>
                    Defines the cache strategy for the association.
                </documentation>
                <value>@andromda.hibernate.association.cache</value>
                <appliedOnElement>Association between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>read-write</value>
                    <value>nonstrict-read-write</value>
                    <value>read-only</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_ASSOCIATIONCACHE_DISTRIBUTED">
                <documentation>
                    Defines whether the cache for this association is to be distributed.
                </documentation>
                <value>@andromda.hibernate.association.cache.distributed</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_EHCACHE_MAX_ELEMENTS">
                <documentation>
                    EhCache property. Defines the maximum number of objects that will be created in memory.
                </documentation>
                <value>@andromda.hibernate.ehcache.maxElementsInMemory</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>A strictly positive integer</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_EHCACHE_ETERNAL">
                <documentation>
                    EhCache property. Defines if elements are eternal.
                </documentation>
                <value>@andromda.hibernate.ehcache.eternal</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_EHCACHE_TIME_TO_IDLE">
                <documentation>
                    EhCache property. Defines the time to idle for an element before it expires.
                </documentation>
                <value>@andromda.hibernate.ehcache.timeToIdleSeconds</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>A strictly positive integer</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_EHCACHE_TIME_TO_LIVE">
                <documentation>
                    EhCache property. Defines the time to live for an element before it expires.
                </documentation>
                <value>@andromda.hibernate.ehcache.timeToLiveSeconds</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>A strictly positive integer</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_EHCACHE_OVERFLOW_TO_DISK">
                <documentation>
                    EhCache property. Defines if elements can overflow to disk.
                </documentation>
                <value>@andromda.hibernate.ehcache.overflowToDisk</value>
                <appliedOnElement><![CDATA[<<Entity>>]]></appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
        </elementGroup>
        <elementGroup name="Tagged Values for web flow">
            <documentation>
                The following are tagged values exclusively used for web flow.
            </documentation>
            <element name="EXCEPTION_TYPE">
                <documentation>
                    Indicates which exception this handler takes care of
                </documentation>
                <value>@andromda.presentation.exception.type</value>
                <appliedOnElement>Transition</appliedOnElement>
                <allowedValues>
                    <value>the fully qualified name of a Java java.lang.Exception type</value>
                    <value default="true">java.lang.Exception</value>
                </allowedValues>
            </element>
            <element name="ACTION_FORM_SCOPE">
                <documentation>
                    This allows one to override the action form scope defined
                    by the <a href="namespace.html#actionFormScope">actionFormScope</a> namespace property.
                </documentation>
                <value>@andromda.webflow.action.form.scope</value>
                <appliedOnElement>Transition coming out of an action state carrying the <![CDATA[<<FrontEndView>>]]> stereotype</appliedOnElement>
                <allowedValues>
                    <value>flash</value>
                    <value>flow</value>
                    <value>conversation</value>
                </allowedValues>
            </element>
        </elementGroup>
    </elements>
</profile>